---
source: src/parser/mod.rs
expression: "parse(\"let rec f = () => f()\")"
---
Program {
    body: [
        Decl {
            span: 0..21,
            pattern: Ident(
                BindingIdent {
                    span: 8..9,
                    id: Ident {
                        span: 8..9,
                        name: "f",
                    },
                    type_ann: None,
                },
            ),
            init: Some(
                Fix(
                    Fix {
                        span: 12..21,
                        expr: Lambda(
                            Lambda {
                                span: 12..21,
                                params: [
                                    Ident(
                                        BindingIdent {
                                            span: 8..9,
                                            id: Ident {
                                                span: 8..9,
                                                name: "f",
                                            },
                                            type_ann: None,
                                        },
                                    ),
                                ],
                                body: Lambda(
                                    Lambda {
                                        span: 12..21,
                                        params: [],
                                        body: App(
                                            App {
                                                span: 18..21,
                                                lam: Ident(
                                                    Ident {
                                                        span: 18..19,
                                                        name: "f",
                                                    },
                                                ),
                                                args: [],
                                            },
                                        ),
                                        is_async: false,
                                        return_type: None,
                                    },
                                ),
                                is_async: false,
                                return_type: None,
                            },
                        ),
                    },
                ),
            ),
            declare: false,
        },
    ],
}
