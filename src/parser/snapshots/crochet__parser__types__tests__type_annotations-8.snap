---
source: src/parser/types.rs
expression: "parse_type(\"(A) => B & C | D\")"
---
Lam(
    LamType {
        span: 0..16,
        params: [
            TypeRef(
                TypeRef {
                    span: 1..2,
                    name: "A",
                    type_params: None,
                },
            ),
        ],
        ret: Union(
            UnionType {
                span: 7..16,
                types: [
                    Intersection(
                        IntersectionType {
                            span: 7..12,
                            types: [
                                TypeRef(
                                    TypeRef {
                                        span: 7..8,
                                        name: "B",
                                        type_params: None,
                                    },
                                ),
                                TypeRef(
                                    TypeRef {
                                        span: 11..12,
                                        name: "C",
                                        type_params: None,
                                    },
                                ),
                            ],
                        },
                    ),
                    TypeRef(
                        TypeRef {
                            span: 15..16,
                            name: "D",
                            type_params: None,
                        },
                    ),
                ],
            },
        ),
    },
)
